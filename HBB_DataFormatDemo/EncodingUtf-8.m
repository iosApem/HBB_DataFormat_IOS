//
//  EncodingUtf-8.m
//  SQT
//
//  Created by ios on 12-3-21.
//  Copyright (c) 2012å¹´ __MyCompanyName__. All rights reserved.
//

#import "EncodingUtf-8.h"
#define CODEARRAY [NSArray arrayWithObjects:, nil]
@implementation EncodingUtf_8
static Byte val[] = {
        0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,
        0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,
        0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,
        0x3F, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,
        0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,
        0x3F, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,
        0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,
        0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,
        0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,
        0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,
        0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,
        0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,
        0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,
        0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,
        0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F
};
+(NSString *)encode:(NSString *)s {
    NSMutableString *sbuf = [[NSMutableString alloc] init];
    int i = 0;
    int len = s.length; 

    while (i < len) {
        int ch = [s characterAtIndex:i];
         unichar cc = (unichar)ch;  
        if ('A' <= ch && ch <= 'Z') {
            [sbuf appendString: [NSString stringWithCharacters:&cc length:1]];
        } else if ('a' <= ch && ch <= 'z') {
            [sbuf appendString: [NSString stringWithCharacters:&cc length:1]];
        } else if ('0' <= ch && ch <= '9') {
            [sbuf appendString: [NSString stringWithCharacters:&cc length:1]];
        } else if (ch == '-' || ch == '_' || ch == '.' || ch == '!'
                   || ch == '~' || ch == '*' || ch == '\'' || ch == '('
                   || ch == ')') {
            [sbuf appendString: [NSString stringWithCharacters:&cc length:1]];
        } else if (ch == '%') {
             unichar cint = 0;
            if ('u' != [s characterAtIndex:i + 1 ]) {
                cint = (cint << 4) | val[[s characterAtIndex:(i + 1)]];
                cint = (cint << 4) | val[[s characterAtIndex:(i + 2)]];
                i += 2;
            } else {
                cint = (cint << 4) | val[[s characterAtIndex:(i + 2)]];
                cint = (cint << 4) | val[[s characterAtIndex:(i + 3)]];
                cint = (cint << 4) | val[[s characterAtIndex:(i + 4)]];
                cint = (cint << 4) | val[[s characterAtIndex:(i + 5)]];
                i += 5;
            }
            
            [sbuf appendString: [NSString stringWithCharacters:&cint length:1]] ;
        } else {
            [sbuf appendString: [NSString stringWithCharacters:&cc length:1]];
        }
        i++;
    }
    return sbuf;
}
@end
